name: Commit → Discord with AI explanation (@everyone)

on:
  push:
    branches: [ main ]   # change if your default branch is different

jobs:
  explain-and-post:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Collect commit info + diff
        id: info
        shell: bash
        run: |
          set -e
          echo "SHA=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "REPO=${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "ACTOR=${GITHUB_ACTOR}" >> $GITHUB_OUTPUT
          echo "TITLE<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%s >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "BODY<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%b >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          BEFORE="${{ github.event.before }}"
          if [ -z "$BEFORE" ] || [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
            BEFORE=$(git rev-parse HEAD~1 || echo "")
          fi

          if [ -n "$BEFORE" ]; then
            git diff --name-only "$BEFORE" "$GITHUB_SHA" > changed_files.txt
            git diff --no-color --unified=0 "$BEFORE" "$GITHUB_SHA" > diff.txt
          else
            git show --name-only --pretty="" "$GITHUB_SHA" > changed_files.txt
            git show --no-color --unified=0 "$GITHUB_SHA" > diff.txt
          fi

          echo "Changed files:"
          cat changed_files.txt || true
          echo "---"
          head -n 40 diff.txt || true

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Explain commit + post to Discord (@everyone)
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPO: ${{ steps.info.outputs.REPO }}
          SHA: ${{ steps.info.outputs.SHA }}
          TITLE: ${{ steps.info.outputs.TITLE }}
          BODY: ${{ steps.info.outputs.BODY }}
          ACTOR: ${{ steps.info.outputs.ACTOR }}
        run: |
          cat > post_commit.py << 'PY'
import os, json, requests, textwrap, sys

repo   = os.environ["REPO"]
sha    = os.environ["SHA"]
title  = (os.environ.get("TITLE") or "").strip()
body   = (os.environ.get("BODY") or "").strip()
actor  = (os.environ.get("ACTOR") or "").strip()
channel_id = os.environ["DISCORD_CHANNEL_ID"]
bot_token  = os.environ["DISCORD_BOT_TOKEN"]
openai_key = os.environ.get("OPENAI_API_KEY")

def read(path):
    try:
        with open(path,"r",encoding="utf-8",errors="ignore") as f:
            return f.read()
    except FileNotFoundError:
        return ""

changed_files = [ln.strip() for ln in read("changed_files.txt").splitlines() if ln.strip()]
files_preview = ", ".join(changed_files[:6]) + (" …" if len(changed_files) > 6 else "") if changed_files else "(no files listed)"
diff_trimmed = read("diff.txt")[:6000]

def fallback_explanation():
    parts = [f"• Summary: {title or '(no title)'}"]
    if body:
        parts.append("• Notes: " + body.splitlines()[0])
    parts.append(f"• Files: {files_preview}")
    parts.append("• Follow-ups: run tests/checks for affected areas.")
    return "\n".join(parts)

def explain_with_openai(prompt: str) -> str:
    url = "https://api.openai.com/v1/responses"
    headers = {"Authorization": f"Bearer {openai_key}", "Content-Type": "application/json"}
    data = {"model": "gpt-4o-mini", "input": prompt}
    r = requests.post(url, headers=headers, json=data, timeout=60)
    r.raise_for_status()
    j = r.json()
    txt = j.get("output_text")
    if not txt and isinstance(j.get("output"), list):
        txt = "\n".join([it.get("text","") for it in j["output"] if isinstance(it, dict) and it.get("type")=="output_text"]).strip()
    return txt or "(no explanation generated)"

prompt = f"""Explain this GitHub commit for a tunnel boring machine team in 5–10 short lines:
- What changed (files/modules)
- Why it likely changed (intent)
- Risks or checks to run next
Use concise bullets and backticks for identifiers.

Title: {title}
Body: {body or '(no body)'}
Files: {files_preview}
Diff (trimmed):
{diff_trimmed}
"""

explanation = fallback_explanation()
if openai_key:
    try:
        explanation = explain_with_openai(prompt)
    except Exception as e:
        explanation = f"(AI explanation failed: {e})\n\n" + fallback_explanation()

commit_url = f"https://github.com/{repo}/commit/{sha}"
msg = textwrap.dedent(f"""
**[Commit]** `{repo}` @ `{sha[:7]}` by {actor}
{commit_url}

**[Explanation]**
@everyone
{explanation}
""").strip()

payload = {"content": msg, "allowed_mentions": {"parse": ["everyone"]}}

resp = requests.post(
    f"https://discord.com/api/v10/channels/{channel_id}/messages",
    headers={"Authorization": f"Bot {bot_token}", "Content-Type": "application/json"},
    data=json.dumps(payload),
    timeout=30
)
try:
    resp.raise_for_status()
    print("Posted AI explanation to Discord.")
except Exception as e:
    print("Discord post failed:", resp.status_code, resp.text, file=sys.stderr)
    raise
PY
          python post_commit.py
