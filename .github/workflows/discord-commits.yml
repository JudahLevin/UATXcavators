name: Commits â†’ Discord (classic format)

on:
  push:
    branches: [ main ]

jobs:
  post-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history so we can read each commit)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Send each commit to Discord (message, files, link)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          REPO: ${{ github.repository }}
          ACTOR: ${{ github.actor }}
          COMMITS_JSON: ${{ toJson(github.event.commits) }}
        shell: bash
        run: |
          set -euo pipefail
          [ -z "${WEBHOOK:-}" ] && { echo "Missing DISCORD_WEBHOOK_URL secret"; exit 1; }

          COUNT=$(printf '%s' "$COMMITS_JSON" | jq 'length')
          [ "$COUNT" -eq 0 ] && { echo "No commits in this push."; exit 0; }

          printf '%s' "$COMMITS_JSON" | jq -r '.[].id' | while read -r SHA; do
            MSG=$(printf '%s' "$COMMITS_JSON" | jq -r --arg sha "$SHA" '.[] | select(.id==$sha) | .message')
            SAFE_MSG=$(printf '%s' "$MSG" | tr -d '\r' | sed 's/"/\\"/g' | head -c 900)

            # Try to list files for this specific commit; fall back if not available
            if FILES=$(git show --name-only --pretty="" "$SHA" 2>/dev/null | sed 's/"/\\"/g' | head -n 6 | paste -sd ', ' -); then
              [ -z "$FILES" ] && FILES="(no file list)"
            else
              FILES="(file list unavailable)"
            fi

            COMMIT_URL="https://github.com/${REPO}/commit/${SHA}"

            BODY="**[Commit]** \`${REPO}\` @ \`${SHA:0:7}\` by ${ACTOR}
${COMMIT_URL}

**Message:** ${SAFE_MSG}
**Files:** ${FILES}"

            BODY=$(printf '%s' "$BODY" | head -c 1900)

            jq -nc --arg content "$BODY" '{content:$content}' > payload.json
            curl -sS -H "Content-Type: application/json" -d @payload.json "$WEBHOOK"
          done
